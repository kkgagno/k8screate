- name: Check if metallb is running
  shell: "kubectl get namespace |grep metallb-system"
  register: running_process
  ignore_errors: true
  #failed_when: running_process.rc < 1
- debug:
    msg: "Metallb is running"
  when: running_process.stdout_lines|length > 0
  ignore_errors: true
- meta: end_host
  when: running_process.stdout_lines|length > 0
  ignore_errors: true

- name: Restart kubedns and wait, cis settings crash dns pods
  become: true
  shell: "{{ item }}"
  with_items: 
    - "kubectl rollout restart deployment coredns -n kube-system"
    - "kubectl wait --for=condition=Ready pods --all -n kube-system --timeout 480s"   
  ignore_errors: true
  
- name: Install Metallb
  become: false
  shell: "kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.14.8/config/manifests/metallb-native.yaml"

- name: Create metallb.yaml on host
  file:
      path: "metallb.yaml"
      state: touch

- name: metallb.yaml add block of lines
  blockinfile:
    path: metallb.yaml  
    state: present
    block: |
      apiVersion: metallb.io/v1beta1
      kind: IPAddressPool
      metadata:
        creationTimestamp: null
        name: default
        namespace: metallb-system
      spec:
        addresses:
        - {{ vardata.metallb }}
      status: {}
      ---
      apiVersion: metallb.io/v1beta1
      kind: L2Advertisement
      metadata:
        creationTimestamp: null
        name: l2advertisement1
        namespace: metallb-system
      spec:
        ipAddressPools:
        - default       
      status: {}
      ---


- name: Install Metallb config yaml
  become: true
  shell: "{{ item }}"
  with_items: 
    - "kubectl wait --for=condition=Ready pods --all -n metallb-system --timeout 480s"
    - "kubectl apply -f metallb.yaml"


- name: Create values.yaml for kured
  file:
      path: "/etc/values.yaml"
      state: touch
      

- name: values.yaml add data to file
  blockinfile:
    path: "/etc/values.yaml"  
    state: present
    block: |
      window_start: “22:00”
      window_end: “06:00”
      reboot_days: “mon,tue,wed,thu,fri”

- name: Add kured repo, create  namespace, and install
  become: true
  command: "{{ item }}"
  with_items:
      - "helm repo add kubereboot https://kubereboot.github.io/charts"
      - "helm repo update"
      - "helm install kured kubereboot/kured --namespace kube-system -f /etc/values.yaml"

- name: Add prometheus/grafana repo, create  namespace, and install
  become: true  
  command: "{{ item }}"
  with_items:
      - "helm repo add prometheus-community https://prometheus-community.github.io/helm-charts"
      - "helm repo update"
      - "kubectl create ns prometheus-stack"
      - "helm install -n prometheus-stack prometheus prometheus-community/kube-prometheus-stack"
      - "kubectl patch svc prometheus-grafana -n prometheus-stack -p '[{\"op\":\"replace\",\"path\":\"/spec/type\",\"value\":\"LoadBalancer\"}]' --type='json'"

- name: Create lokivalues.yaml for loki
  file:
      path: "/etc/lokivalues.yaml"
      state: touch
      

- name: lokivalues.yaml add data to file
  blockinfile:
    path: "/etc/lokivalues.yaml"  
    state: present
    block: |
      loki:
        enabled: true
        image:
          tag: '2.9.11'

      promtail:
         enabled: true

      fluent-bit:
        enabled: false

      grafana:
        enabled: false

#      prometheus:
#        enabled: false
     


- name: Add Loki to prometheus stack
  become: true
  command: "{{ item }}"
  with_items:
      - "helm repo add grafana https://grafana.github.io/helm-charts"
      - "helm repo update"
      - "helm upgrade --install loki grafana/loki-stack --values /etc/lokivalues.yaml -n prometheus-stack"
      
